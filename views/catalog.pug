doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Books List
    link(rel='stylesheet', href='/stylesheets/style.css')
    style.
      /* Add CSS to style the book items */
      .book-item {
        margin-bottom: 100px;
      }
      /* Add a class for books to set the font size to 12pt */
      .book-details {
        font-size: 12pt;
      }
      /* Add a class for description to set the font size to 9pt */
      .description {
        font-size: 9pt;
      }
      /* Add CSS for labels */
      .label {
        font-weight: bold;
        margin-right: 5px;
      }
      /* Add CSS for the cart button */
      .cart-button {
        background-color: #007bff;
        color: #fff;
        padding: 5px 10px;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s;
      }
      .cart-button:hover {
        background-color: #0056b3;
      }
body
    script(src="Script.js")
    header
      .container
        #branding
          h1
            span.highlight Caffeine Chronicles
        nav
          ul
            li
              a(href="/") Home
            li.current
              a(href="catalog") Catalog
            li
              a(href="about") About
            li
              a(href="contact") Contact
            li
              a(href="cart") Cart
            li
              if isAuthenticated
                a(href="/userinfo")
                  div.NavButton User

                li
                  a(href="/logout")
                    div.NavButton Logout
              else
                a(href="/login")
                  div.NavButton Log In
    img(src='../images/alt-showcase.jpeg', alt='Showcase photo', width='100%')
    .container
      section#main-col
        h2.page-title Catalog
            ul
                each book in books
                    li.book-item 
                      .book-details
                        p
                          span.label Title:
                          | #{book.BookTitle}
                        p
                          span.label Author:
                          | #{book.Author}
                        p
                          span.label Price:
                          | $#{book.Price}
                        p.description
                          span.label Description:
                          | #{book.Desc}
                      if isAuthenticated
                        .quantity-selection
                          label(for='qty-#{book.BookID}') Quantity:
                          select(id='select-#{book.BookID}')
                            option(value='1') 1
                            //option(value='2') 2
                            //option(value='3') 3
                        button.cart-button(type="button", data-book-id=book.BookID, onclick="addToCart(this)") Add to Cart

                      else
                        a(href='/login' style='font-size: 18px;') Sign In to Add to your Cart
      aside#sidebar
        div.dark
          h3 Get Our Newsletter
          form.quote
            div
              label Email
              br
              input(type="email", placeholder="Enter Email...")
            button.button_1(type="submit", onclick="myFunction()") Subscribe
    footer
      p Caffeine Chronicles &copy; 2024

script.
  // Function to add a book to the cart
   function addToCart(buttonElement) {
    // Retrieve the book ID from the button's data attribute
    const bookID = buttonElement.getAttribute('data-book-id');
    console.log(bookID);

     // Use the book ID to construct the ID selector for the corresponding select element
     const selector = '#select-' + bookID;
     console.log('Selector:', selector);
     const quantitySelect = document.querySelector(selector);
     console.log(quantitySelect);
     if (!quantitySelect) {
       console.error('Element not found for selector:', selector);
     }

     // Retrieve the selected quantity value
     const quantity = quantitySelect ? quantitySelect.value : 1; // Default to 1 if not found

      //console.log('Book ID:', bookID, 'Quantity:', quantity);
      //alert('Function called with Book ID: ' + bookID + ' and Quantity: ' + quantity);

     fetch('/catalog', {
       method: 'POST',
       headers: {
         'Content-Type': 'application/json',
       },
       body: JSON.stringify({
         bookID: bookID,
         quantity: quantity, // This now includes the quantity from the select element
         // Include other relevant information if needed
       }),
     })
             .then(response => response.json())
             .then(data => {
               alert(data.message);// Assuming the server responds with a message
             })
             .catch((error) => {
               console.error('Error:', error);
             });
     alert("Books have been added!")
   }

  function myFunction() {
    alert("Thanks for subscribing!");
    window.location.reload();
  }


